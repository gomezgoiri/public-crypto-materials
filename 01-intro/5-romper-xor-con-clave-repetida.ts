/*
 * El siguiente mensaje ha sido cifrado con Vigenère usando una
 * clave de tres letras en español:
 *
 * 172120623c2e212624262e25623e34276f33272c2e2f3f242c3c20622a2d622282eb3d283620
 * 61273c61233c282f26322f2061233b33232c352b3920622b24312b24622a2d623f342c3b2e62
 * 2b24623928313b20622b24622320316f20313f28302e222b202f273c6f62012e623c2e2e2061
 * 24202c272135236f2d236f242426222b2a2f212620623661302a2f3721222b2e61236f2d236f
 * 252b3c2230262c2b2120212682f1216d623c282c2061333a24623b202f2d2881e62f62272021
 * 2a61328cfb202328212e61232928302220212682f12161262a61372120622c28273d35236f2f
 * 2d2c2881fc2f622b24622320622328202a33362e25796f2c276f33272928273d2e622e612e2e
 * 612b2b24236f25276f30372a612c3a24313b332d6f25273c352b212e622a32368ce0622a2f62
 * 2134273c35302e326222202c20326e6f25276f30372a612c3a24313b332d6f82eb3728362061
 * 2c2061262a31272125276f25276f27372a33382e32623e34276f24313b82eb21612f8ce0316f
 * 202e2382e36f25276f2f372a32363d2e622c2e2c3b332d236d622b24623e34276f25273f242c
 * 2b24622b2462212e3120353020326c6f0e6e6f2d2d6f30372a61273c612e20612f26322f206d
 * 622320622625272e61262a61333a2462212e623c2e2f2032623982ef2c352b2220316f25276f
 * 2d233c61212633213a2f313b202c2c28233c6d623c282c2061263a2481fe2e316f25276f2f37
 * 2a32363d2e622b24313b282c206d622328203d24316f31233d20623c34202633622720313b20
 * 622e2d2e8cec622e252d2125276f2f372a32363d2e622a32243a2430352e6e6f2f372a32363d
 * 2e623b202e2a2f3620613b6f2f372a32363d2e316f32372a82f3203262212e316f2d2e2a3727
 * 216f
 *
 *  1. Separar el contenido cifrado en 3 trozos distintos.
 *  2. Descubrir la clave usada usando de base el código del ejercicio 3.
 */

import { Buffer } from "node:buffer"

const KEY_SIZE = 3
const cipherText = Buffer.from(
  "172120623c2e212624262e25623e34276f33272c2e2f3f242c3c20622a2d622282eb3d28362061273c61233c282f26322f2061233b33232c352b3920622b24312b24622a2d623f342c3b2e622b24623928313b20622b24622320316f20313f28302e222b202f273c6f62012e623c2e2e206124202c272135236f2d236f242426222b2a2f212620623661302a2f3721222b2e61236f2d236f252b3c2230262c2b2120212682f1216d623c282c2061333a24623b202f2d2881e62f622720212a61328cfb202328212e61232928302220212682f12161262a61372120622c28273d35236f2f2d2c2881fc2f622b24622320622328202a33362e25796f2c276f33272928273d2e622e612e2e612b2b24236f25276f30372a612c3a24313b332d6f25273c352b212e622a32368ce0622a2f622134273c35302e326222202c20326e6f25276f30372a612c3a24313b332d6f82eb37283620612c2061262a31272125276f25276f27372a33382e32623e34276f24313b82eb21612f8ce0316f202e2382e36f25276f2f372a32363d2e622c2e2c3b332d236d622b24623e34276f25273f242c2b24622b2462212e3120353020326c6f0e6e6f2d2d6f30372a61273c612e20612f26322f206d622320622625272e61262a61333a2462212e623c2e2f2032623982ef2c352b2220316f25276f2d233c61212633213a2f313b202c2c28233c6d623c282c2061263a2481fe2e316f25276f2f372a32363d2e622b24313b282c206d622328203d24316f31233d20623c34202633622720313b20622e2d2e8cec622e252d2125276f2f372a32363d2e622a32243a2430352e6e6f2f372a32363d2e623b202e2a2f3620613b6f2f372a32363d2e316f32372a82f3203262212e316f2d2e2a3727216f",
  "hex",
)

const slices: Buffer[] = []
for (let i = 0; i < KEY_SIZE; i++) {
  slices[i] = Buffer.alloc(0)
}

// Id metiendo cada byte en el grupo que le corresponde
for (let i = 0; i < cipherText.length; i++) {
  /*
   * 0x17 => al 1er trozo
   * 0x21 => al 2do trozo
   * 0x20 => al 3er trozo
   * 0x62 => al 1ero
   * 0x3c => al 2do
   * 0x2e => al 3ero
   * 0x21 => al 1ero
   * ...
   */
  const sliceNumber = 0 // ?
  // Podeis usar Buffer.concat([buff1, buff2]) para juntar buffers
  // y buff.subarray() para seleccionar trozos (id byte a byte)
  slices[sliceNumber] = null // concatenar valor anterior y la nueva letra
}

// Usad la función "findLikelyKey" del ejercicio 3 con cada uno de los trozos y juntad las 3 letras resultantes.
// Por comodidad, podeis usar: ["a", "b", "c"].join("") (que devuelve "abc")
// Sería equivalente a:
//   const arr = ["a", "b", "c"]
//   let joined = ""
//   for (let i=0; i<arr.length; i++) {
//      joined = joined + arr[i]
//   }
// Y joined sería "abc" al salir del for.
const key = [].join("")

console.log("Clave detectada:", key.toString())
console.group("Mensaje original:")
console.log(decodeVigenere(cipherText, key).toString())
console.groupEnd()
